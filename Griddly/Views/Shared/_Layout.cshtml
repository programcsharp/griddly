<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title@(!string.IsNullOrWhiteSpace(ViewBag.Title) ? " - " : null)Griddly</title>
    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/SyntaxHighlighter/shCore.css")
    @Styles.Render("~/Content/SyntaxHighlighter/shThemeDefault.css")
    @Scripts.Render("~/bundles/modernizr")
    @RenderSection("head", false)
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Griddly", "Index", "Home", null, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li class="@(ViewContext.RouteData.Values["action"].ToString() == "examples" ? "active" : null)">@Html.ActionLink("Examples", "Examples")</li>
                    <li class="@(ViewContext.RouteData.Values["action"].ToString() == "editly" ? "active" : null)">@Html.ActionLink("Editly", "Editly")</li>
                    <li class="@(ViewContext.RouteData.Values["action"].ToString() == "historytest" ? "active" : null)">@Html.ActionLink("History Test", "HistoryTest")</li>
                    <li><a href="https://github.com/programcsharp/griddly/issues">Issues</a></li>
                    <li class="@(ViewContext.RouteData.Values["action"].ToString() == "about" ? "active" : null)">@Html.ActionLink("About", "About")</li>
                </ul>
            </div>
        </div>
    </div>
    @RenderSection("header", false)
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <div class="docs-social">
                <ul class="docs-social-buttons">
                    <li>
                        <iframe class="github-btn" src="http://ghbtns.com/github-btn.html?user=programcsharp&amp;repo=griddly&amp;type=watch&amp;count=true" width="100" height="20" title="Star on GitHub"></iframe>
                    </li>
                    <li>
                        <iframe class="github-btn" src="http://ghbtns.com/github-btn.html?user=programcsharp&amp;repo=griddly&amp;type=fork&amp;count=true" width="102" height="20" title="Fork on GitHub"></iframe>
                    </li>
                    @*<li class="follow-btn">
                        <a href="https://twitter.com/griddlygrid" class="twitter-follow-button" data-link-color="#0069D6" data-show-count="true">Follow @@griddlygrid</a>
                    </li>*@
                    <li class="tweet-btn">
                        <a href="https://twitter.com/share" class="twitter-share-button" data-url="http://griddly.com/" data-count="horizontal" data-via="griddlygrid" data-related="programcsharp:Creator of Griddly">Tweet</a>
                    </li>
                </ul>
            </div>
            <p>&copy; @DateTime.Now.Year Chris Hynes, Joel Potter</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/floatthead/1.2.10/jquery.floatThead.min.js"></script>
    @Scripts.Render("~/scripts/griddly.js")
    @Scripts.Render("~/scripts/editly.js")
    @Scripts.Render("~/scripts/bootstrap-multiselect.js")
    @Scripts.Render("~/scripts/SyntaxHighlighter/shCore.js")
    @Scripts.Render("~/scripts/SyntaxHighlighter/shBrushCSharp.js")
    @Scripts.Render("~/scripts/SyntaxHighlighter/shBrushRazor.js")
    @RenderSection("scripts", required: false)
    <script>
        SyntaxHighlighter.defaults.gutter = false;
        SyntaxHighlighter.defaults.toolbar = false;

        SyntaxHighlighter.all();
        
        !function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0], p = /^http:/.test(d.location) ? 'http' : 'https'; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = p + '://platform.twitter.com/widgets.js'; fjs.parentNode.insertBefore(js, fjs); } }(document, 'script', 'twitter-wjs');
    </script>
</body>
</html>
